OMO Issues
----------

v0.4
----

[ ]Implement tags submission and retrieval.

[ ]Add library profiles. A library profile will contain library settings
   specific to that profile. For instance, you can have the default profile
   contain all of your music and have a separate profile for just MODs or
   game music.

[ ]Implement portable mode. In portable mode, the library databases and app
   settings are stored alongside the executable. The idea is to allow a user to
   copy their music collection to a thumb drive and use it on multiple machines
   without having to generate library databases for each machine.

[ ]Look into adding a lyrics window.


v0.3
----

[X]Factor out library setup routines.

[X]Factor out queue helper routines.

[X]Save queue data on exit and reload on open so users can continue where they
   left off.

[X]Implement library caching system.

   [X]Cache the artist, album, and song lists.

   [X]Force rescan if we modify the library folder settings.

[X]Stop timer when performing actions that can take a long time.

[X]Fix mixed tabs/spaces.

[X]Implement font size override. The user should be able to specify a preferred
   font size to override a theme's font size. This override should cause the
   theme system to load the font in the correct size so we get a properly sized
   font throughout the GUI system.

[X]Implement track looping.

   [X]Add codec handler function for setting up the loop for a loaded track.
      The codec handler will be responsible for keeping track of this data and
      ensuring playback respects the passed loop settings.

   [X]Add loop handling to MP3A5. So we can implement track looping in the
      MP3A5 codec handler.

   [X]Add loop handling to all codec handlers that can support it.

[X]Implement seek() for DUMBA5 codec handler.

   I think we can get this working by calling duh_end_sigrenderer() and
   generate a new sigrenderer for the player with duh_start_sigrenderer(),
   passing in the desired seek time. We should add the requisite functionality
   to DUMBA5. This will require utilizing mutex locking to prevent accessing
   the sigrenderer while it is in the process of being swapped out.

   We should fix dumba5_set_player_pattern(), too. It looks like the function
   is using pointers incorrectly. Since this and the new
   dumba5_set_player_position() are functionally similar, we can probably use
   most of the same code for both functions.

[X]Implement track split dialog and tag system. We need a way to store track
   split data in the base file's metedata so we can keep it in the online
   database instead of requiring each user to split tracks on their own.

[ ]Implement get_length() and get_position() for all codec handlers that can
   support it. These functions should take looping into account. If the
   playback is looped, we should count the total playback length. This includes
   the total time of the looped audio and the specified fade time.

[ ]Add status bar to library view. We should show library-related messages in
   this status bar instead of using the list box.

[ ]Finish main UI.

   [ ]Modularize UI setup.

      [ ]Use separate function for adding each module to the total UI. Each
         section of the UI should be a separate module. The player module will
         consist of the player controls, the seek control, the volume control,
         and the two info lines. The library artist, album, and song lists
         should each be their own modules as well as the status bar.

         We need to do this to make the UI setup code simpler and easier to
         maintain. With each module being created individually, we can
         calculate a total UI space for the user's device and add the modules
         that the user wants or the ones that will fit on the screen.

         Each function should be given a space to occupy on the total UI and
         the setup code for that module will smartly fill the available space
         with the required UI elements.

   [ ]Add volume and seek controls to the player module.

   [ ]Add song info to the player module. The plan is to have 2 lines for this,
      one line for the artist, title, etc. of the currently playing song and
      another for track-specific info from the codec handler.

v0.2
----

[X]Fix queue list display swapping album and title.

[X]Fix queue list not scrolling to keep up with the currently playing queue
   item. If the current item is on screen when it finishes playing,
   automatically scroll the list to put the new current item at the top if the
   current item is now past the bottom of the visible part of the list.

[X]Don't require user to select a library folder if they press L and haven't
   set a library folder yet.

[X]Show text indicating no library has been set up in library view when
   appropriate.

[X]Ensure we are spawning the library scanning thread in all places the library
   setup routing is being called.

[X]Keep queue list tags updated.

   [X]When editing tags, the new tags need to be displayed upon okaying them.

   [X]Tags need to be updated with the info from the library if the library
      gets finished loading.

[X]Specify where archive handlers extract files to. We need the library scanner
   to extract to a different location than the player so we don't get conflicts
   that cause playback or scanning errors.

[X]Get tags for queued files using codec handler if library has not been loaded
   yet.

[X]Add more detailed scanning info to the library view. Show which file is
   currently being scanned and total progress.

[X]Add 'Shuffle All' item to song list.

[X]Allow Shift+Double-Click to add items to the queue instead of replacing it.

[X]Implement window constraints. Use theme data to calculate a good minimum
   window size.

[X]Figure out why window position settings aren't restored properly when
   switching back to player-only view.

[X]Update menus to include items for all current functionality.

[X]See if we can add some stuff to info.plist to make associating music files
   with OMO work correctly.

[X]Update version numbers.

[X]Update changelog.

[X]Improve default theme button graphics.

[X]Don't use t3f_get_filename() in multi-threaded situations.

[X]Don't restore window positions on Windows since we can't guarantee the
   window position will be correct.
